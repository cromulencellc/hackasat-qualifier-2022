// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.231.5/containers/docker-existing-dockerfile
{
	"name": "Local F-Prime Builder Image",

	// Sets the run context to one level up instead of the .devcontainer folder.
	// "context": "../challenge/",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	// "dockerFile": "../challenge/Dockerfile",
	"image": "has3/quals/fprime-exploitation/challenge-builder:latest",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.profiles.linux": {
			"bash": {
			  "path": "/bin/bash"
			}
		  },
		  "terminal.integrated.defaultProfile.linux": "bash"
	},
	
	
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": ["ms-vscode.cpptools", "ms-python.python", "eamodio.gitlens"],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [5001],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	// "mounts": [
	// 	"source=/home/has/has3-quals/fprime-exploitation/challenge/QualsRef,target=/home/has/fprime/QualsRef,type=volume"
	// ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "has"
}
